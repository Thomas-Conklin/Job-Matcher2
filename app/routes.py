from app import app
from flask import render_template, request
from app.models import model, formopener
    
        
jobs = {
    "Mathematician": [3, 2, 1, 2, 1],
    "Lawyer": [1, 2, 1, 1, 1],
    "Doctor": [2, 2, 1, 1, 2],
    "Nurse": [1, 2, 2, 2, 2],
    "Entrepeneur": [1, 1, 1, 1, 1],
    "Researcher": [2, 3, 1, 2, 2],
    "Veterinarian": [2, 3, 1, 2, 1],
    "Astronaut": [2, 1, 1, 2, 2],
    "Teacher": [1, 1, 2, 2, 1],
    "Philosopher": [2, 1, 1, 2, 3],
    "Professor": [2, 1, 1, 1, 2],
    "Airplane pilot ": [1, 2, 2, 3, 3],
    "Accountant": [2, 1, 1, 1, 3],
    "Banker": [2, 3, 2, 2, 3],
    "Pharmacist": [2, 3, 2, 2, 1],
    "Electrical engineer": [3, 1, 1, 2, 1],
    "Chemist": [3, 2, 1, 2, 1],
    "Security guard": [1, 3, 2, 1, 1],
    "Paramedic": [1, 2, 2, 3, 2],
    "Firefighter": [1, 2, 3, 3, 1],
    "Athletic coach": [1, 3, 3, 2, 3],
    "Artist": [2, 2, 1, 2, 2],
    "Surgeon": [2, 2, 1, 2, 1],
    "Technician": [3, 1, 1, 2, 1],
    "Painter": [2, 3, 1, 2, 2],
    "Graphics designer": [3, 2, 2, 1, 2],
    "Real-estate agent": [1, 3, 3, 2, 3],
    "Janitor": [3, 3, 3, 3, 2],
    "Counselor": [1, 3, 3, 2, 2],
    "Police officer": [2, 3, 1, 2, 1],
    "Architect": [3, 2, 3, 3, 3],
    "Computer scientist": [2, 2, 1, 1, 2],
    "Carpenter": [2, 3, 2, 2, 3],
    "Electrician": [3, 1, 2, 2, 1],
    "Librarian": [3, 2, 1, 3, 2],
    "Actor": [1, 3, 3, 3, 3],
    "Athlete": [1, 3, 3, 1, 1],
    "Producer": [2, 2, 2, 2, 2],
    "Director": [1, 2, 3, 1, 1],
    "Farmer": [2, 3, 3, 3, 3],
    "Chef": [1, 2, 3, 3, 2],
    "Waiter": [1, 2, 1, 3, 3],
    "Clerk": [2, 2, 3, 1, 3],
    "Mechanic": [3, 2, 1, 3, 3],
    "Judge": [2, 2, 1, 3, 3],
    "Historian": [2, 1, 3, 2, 2],
    "Forensic scientist": [2, 2, 3, 3, 2],
    "Manager": [1, 1, 1, 3, 3],
    "Salesman": [1, 2, 3, 2, 2],
    "Analyst": [3, 2, 2, 1, 1],
    "Executive": [3, 1, 1, 2, 3],
    "Photographer": [2, 3, 3, 1, 1],
    "Author": [3, 1, 2, 1, 2],
    "News reporter": [1, 3, 3, 1, 2],
    "Soldier": [1, 3, 3, 1, 3],
    "Receptionist": [1, 1, 3, 3, 1],
    "Baker": [2, 1, 3, 1, 3],
    "Butcher": [2, 1, 3, 1, 2],
    "Jeweler": [1, 2, 3, 1, 3],
    "Model": [1, 3, 2, 3, 3],
    "Chaffeur": [1, 1, 2, 3, 2],
    "Insurance agent": [1, 1, 2, 2, 3],
    "Retail worker": [1, 1, 2, 2, 2],
    "Travel agent": [1, 1, 3, 2, 3],
    "Flight attendant": [1, 3, 2, 2, 3],
    "Postman": [2, 1, 3, 1, 1],
    "Barber": [1, 1, 1, 3, 2],
    "Plumber": [1, 1, 1, 3, 1],
    "Biologist": [3, 2, 3, 3, 1],
    "Logistician": [3, 1, 1, 1, 1],
    "Masseur": [1, 2, 1, 2, 1],
    "Cartographer": [2, 2, 1, 2, 3],
    "Interpreter": [2, 2, 2, 1, 2],
    "Critic": [2, 1, 2, 1, 1],
    "Announcer": [2, 1, 1, 2, 1],
    "Archivist": [3, 1, 3, 2, 3],
    "Bartender": [1, 1, 3, 1, 3],
    "Composer": [2, 1, 3, 2, 3],
    "Curator": [2, 2, 3, 3, 1],
    "Hairstylist": [2, 3, 2, 2, 2],
    "Maid": [2, 2, 3, 3, 3],
    "Assembly worker": [1, 2, 3, 2, 3],
    "Journalist": [2, 2, 3, 2, 3],
    "Landscaper": [2, 3, 2, 1, 3],
    "Detective": [3, 1, 1, 2, 2],
    "Radio caster": [3, 1, 2, 3, 2],
    "Fisherman": [3, 1, 2, 3, 1],
    "Surveyor": [2, 2, 3, 2, 2],
    "Usher": [1, 1, 2, 1, 1],
    "Secretary": [1, 1, 1, 2, 3],
    "Actuary": [2, 3, 1, 2, 3],
    "Chief Executive": [2, 3, 1, 3, 1],
    "Legislator": [2, 3, 2, 1, 2],
    "Chiropractor": [2, 3, 3, 2, 1],
    "Podiatrist": [2, 1, 3, 3, 1],
    "Orthodontist": [2, 2, 3, 2, 3],
    "Dentist": [2, 3, 1, 3, 2],
    "Zoologist": [2, 2, 2, 2, 3],
    "Nutritionist": [2, 2, 1, 1, 1],
    "Tour guide": [1, 1, 2, 1, 2],
    "Clergy": [1, 3, 2, 2, 1],
    "Social worker": [2, 2, 2, 1, 3],
    "Computer programmer": [2, 1, 1, 1, 1],
    "Software engineer": [2, 1, 1, 3, 1],
    "Web developer": [2, 1, 1, 3, 2],
    "Network administrator": [2, 1, 1, 3, 3],
    "Metalworker": [3, 1, 1, 3, 2],
    "Advertisting manager": [3, 1, 2, 1, 3],
    "Marketer": [2, 1, 2, 1, 2],
    "Broker": [2, 1, 2, 2, 1],
    "Telemarketer": [2, 1, 2, 1, 3],
    "Archeologist": [3, 1, 1, 3, 3],
    "Astronomer": [3, 1, 2, 1, 1],
    "Geographer": [3, 1, 2, 3, 3],
    "Civil engineer": [1, 1, 3, 2, 2],
    "Mechanical engineer": [2, 2, 1, 3, 1],
    "Physicist": [2, 2, 2, 2, 1],
    "Dispatcher": [1, 2, 1, 3, 1],
    "Musician": [1, 2, 2, 1, 1],
    "Robotics engineer": [2, 3, 2, 1, 1],
     "Editor": [2, 2, 3, 1, 1],
    "Florist": [2, 1, 2, 3, 2],
    "Translator": [2, 1, 2, 3, 1],
    "Lyricist": [1, 1, 3, 2, 1],
     "Contractor": [1, 2, 1, 2, 3],
    "Potter": [1, 3, 2, 1, 2],
    "Sanitary worker": [1, 2, 3, 3, 3],
    "Tailor": [1, 3, 1, 2, 1],
     "Tutor": [2, 1, 3, 2, 1],
    "Magician": [1, 2, 3, 1, 2],
    "Printer": [2, 3, 3, 3, 1],
    "Financial specialist": [2, 3, 3, 2, 3],
     "Information analyst": [3, 1, 3, 2, 2],
    "Barista": [1, 3, 2, 1, 3],
    "Interior designer": [2, 1, 3, 3, 2],
    "Gardener": [2, 1, 3, 3, 3],
     "Credit analyst": [3, 1, 3, 1, 1],
    "Loan counselor": [3, 1, 3, 3, 3],
    "Video game designer": [3, 1, 1, 3, 1],
    "Web administrator": [3, 1, 3, 3, 1],
     "Costume designer": [3, 2, 1, 1, 1],
    "Radiologist": [3, 2, 2, 1, 3],
    "Financial manager": [3, 1, 3, 1, 2],
    "Furnisher": [2, 2, 2, 1, 1],
     "Animal trainer": [1, 1, 3, 3, 2],
    "Dancer": [1, 2, 2, 1, 2],
    "Budget manager": [3, 1, 3, 3, 1],
    "Baiiliff": [2, 1, 2, 3, 3],
     "Lifeguard": [1, 2, 2, 1, 3],
    "Exterminator": [2, 2, 1, 3, 2],
    "School counselor": [1, 2, 2, 3, 2],
    "Stock specialist": [3, 1, 3, 2, 1],
     "Economist": [3, 1, 3, 1, 3],
    "Ecologist": [3, 2, 2, 2, 1],
    "Anthropologist": [3, 1, 3, 3, 2],
    "Sociologist": [3, 2, 1, 3, 2],
     "Foreman": [3, 2, 1, 1, 2],
    "President": [1, 1, 3, 1, 2],
    "Textile worker": [2, 2, 2, 3, 1],
    "Trucker": [2, 1, 2, 2, 3],
     "Writer": [3, 2, 2, 2, 2],
    "Computer operator": [3, 2, 2, 2, 3],
    "Fashion designer": [1, 2, 1, 2, 2],
    "Physical therapist": [1, 3, 2, 2, 2],
    "Clinical nurse": [1, 2, 1, 3, 2],
    "Political scientist": [3, 3, 2, 2, 1],
    "Con-artist": [1, 3, 1, 3, 3],
    "Customer service representative": [2, 3, 3, 2, 2],
    "Tax collector": [2, 3, 1, 1, 2],
    "Mediator": [2, 2, 1, 3, 2],
    "Tax analyst": [3, 2, 3, 2, 2],
    "Judicial law clerk": [1, 3, 1, 3, 2],
    "Singer": [1, 2, 1, 1, 2],
    "Nuclear engineer": [3, 3, 1, 3, 3],
    "Midwife": [1, 2, 1, 1, 3],
    "Attorney general": [3, 3, 2, 1, 1],
    "Stonemason": [2, 2, 3, 2, 1],
    "Intelligence analyst": [3, 3, 1, 1, 1],
    "Roofer": [2, 2, 1, 1, 3],
    "Retail manager": [3, 3, 2, 1, 3],
    "Dishwasher": [1, 1, 3, 1, 1],
    "Stock gambler": [2, 3, 3, 1, 2],
    "Clown": [1, 2, 2, 2, 1],
    "Renevue analyst": [3, 3, 1, 3, 2],
    "Garbage worker": [2, 3, 3, 3, 2],
    "Marketing manager": [3, 3, 2, 2, 2],
    "Neurologist": [3, 2, 3, 2, 1],
    "Art director": [3, 3, 1, 1, 2],
    "Communications associate": [2, 3, 3, 1, 3],
    "Marketing associate": [2, 3, 2, 3, 3],
    "Business associate": [2, 3, 2, 3, 2],
    "Businessman": [1, 1, 2, 1, 3],
    "Appraiser": [2, 2, 1, 1, 2],
    "Designer": [1, 1, 2, 3, 3],
    "Choreographer": [1, 1, 1, 2, 1],
    "Camera man": [1, 2, 2, 2, 3],
    "Rehabilitation counselor": [1, 1, 3, 3, 3],
    "Assessor": [3, 3, 2, 2, 3],
    "Civil drafter": [3, 3, 2, 3, 1],
    "Drafter": [3, 3, 2, 3, 2],
    "Desktop publisher": [3, 2, 3, 1, 1],
    "Publisher": [3, 2, 3, 1, 2],
    "Hygienist": [3, 2, 2, 3, 1],
    "Blacksmith": [3, 3, 1, 2, 3],
    "Film editor": [2, 2, 2, 3, 3],
    "Gamer": [1, 3, 2, 3, 2],
    "Geologist": [3, 3, 3, 1, 3],
    "Pastery chef": [2, 2, 2, 3, 2],
    "Hospitalist": [2, 2, 3, 1, 2],
    "Hunter": [3, 3, 3, 3, 3],
    "Rancher": [3, 3, 3, 3, 1],
    "Machinist": [3, 1, 2, 2, 2],
    "Nanny": [1, 3, 1, 2, 3],
    "Ship captain": [2, 3, 1, 1, 3],
    "Garment worker": [2, 1, 2, 2, 2],
    "Probation officer": [2, 3, 2, 3, 1],
    "Radio mechanic": [3, 2, 2, 3, 3],
    "Real estate broker": [1, 2, 2, 2, 2],
    "Rigger": [1, 2, 2, 3, 1],
    "Laborer": [1, 3, 1, 3, 1],
    "Sculptor": [2, 3, 1, 1, 1],
    "Cartoonist": [1, 1, 1, 2, 2],
    "Skin care specialist": [1, 1, 1, 1, 2],
    "Treasurer": [3, 2, 1, 2, 2],
    "Taste tester": [1, 3, 1, 1, 2],
    "Stripper": [1, 3, 1, 1, 1],
    "Conservationist": [3, 2, 1, 1, 3],
    "Bodyguard": [1, 3, 1, 2, 2],
    "Recreational worker": [1, 3, 1, 1, 3],
    "Postmaster": [1, 3, 2, 3, 1],
    "Factory worker": [3, 2, 1, 2, 3],
    "Dermatologist": [3, 1, 2, 2, 1],
    "Crossing guard": [3, 3, 1, 2, 1],
    "Ambulance": [3, 3, 2, 3, 3],
    "Miner": [3, 3, 1, 1, 2],
    "Highschool teacher": [1, 1, 1, 2, 2],
    "Unemployed": [3, 1, 1, 1, 1],
    "Acupuncturist": [3, 2, 2, 3, 2],
    "Auctioneer": [3, 3, 1, 1, 3],
    "Arborist": [3, 3, 1, 3, 1],
    "Auditor": [3, 2, 3, 1, 3],
    "Botanist": [3, 3, 3, 1, 1],
    "Brewer": [3, 3, 3, 1, 2],
    "Cardiologist": [3, 3, 3, 2, 1],
    "Concierge": [3, 3, 3, 2, 2],
    "Athletic trainer": [1, 1 ,1 ,1, 3]
}

@app.route('/')
@app.route('/index')
@app.route('/index.html')
def index():
    return render_template ("index.html")

@app.route('/results', methods = ["GET", "POST"])
@app.route('/results.html', methods = ["GET", "POST"])

def tellMeTheFuture ():
    userdata = request.form.to_dict()
    mind = int(userdata["mind"])
    body = int(userdata["energy"])
    soul = int(userdata["nature"])
    feet = int(userdata["tactics"])
    toes = int(userdata["identity"])
    
    for key in jobs:
        print(key)
        job_data = jobs[key]
        print(job_data)
        print(mind)
        print(body)
        print(soul)
        print(feet)
        print(toes)
        
        
        
        if job_data[0] == mind and job_data[1] == body and job_data[2] == soul and job_data[3] == feet and job_data[4] == toes:
            print("Did we get here?")
            user_job = key
            break;
        else:
            user_job = "ERROR"
    
    return user_job
    # for eachItem in userdata:
    #     userResponses.push(userdata[eachItem])
        
    

# for each in jobs:
#     if userResponses == jobs(each):
#         return each